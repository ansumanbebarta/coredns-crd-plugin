diff --git a/service/gateway/gateway.go b/service/gateway/gateway.go
index 0f3b607..fbb5f40 100644
--- a/service/gateway/gateway.go
+++ b/service/gateway/gateway.go
@@ -114,6 +114,8 @@ func (gw *Gateway) ServeDNS(_ context.Context, w dns.ResponseWriter, r *dns.Msg)
 	switch state.QType() {
 	case dns.TypeA:
 		m.Answer = gw.A(state, netutils.TargetToIP(ep.Targets), ep.TTL)
+	case dns.TypeAAAA:
+		m.Answer = gw.AAAA(state, netutils.TargetToIP(ep.Targets), ep.TTL)
 	case dns.TypeTXT:
 		m.Answer = gw.TXT(state, ep.Targets, ep.TTL)
 	default:
@@ -149,6 +151,20 @@ func (gw *Gateway) A(state request.Request, results []net.IP, ttl endpoint.TTL)
 	return records
 }
 
+func (gw *Gateway) AAAA(state request.Request, results []net.IP, ttl endpoint.TTL) (records []dns.RR) {
+	dup := make(map[string]struct{})
+	if !ttl.IsConfigured() {
+		ttl = endpoint.TTL(gw.opts.ttlLow)
+	}
+	for _, result := range results {
+		if _, ok := dup[result.String()]; !ok {
+			dup[result.String()] = struct{}{}
+			records = append(records, &dns.AAAA{Hdr: dns.RR_Header{Name: state.Name(), Rrtype: dns.TypeAAAA, Class: dns.ClassINET, Ttl: uint32(ttl)}, AAAA: result})
+		}
+	}
+	return records
+}
+
 // TXT generates dns.RR for TXT record
 func (gw *Gateway) TXT(state request.Request, results []string, ttl endpoint.TTL) (records []dns.RR) {
 	if !ttl.IsConfigured() {
